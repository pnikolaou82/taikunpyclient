# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.project_details_for_vms_dto import ProjectDetailsForVmsDto

class TestProjectDetailsForVmsDto(unittest.TestCase):
    """ProjectDetailsForVmsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectDetailsForVmsDto:
        """Test ProjectDetailsForVmsDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectDetailsForVmsDto`
        """
        model = ProjectDetailsForVmsDto()
        if include_optional:
            return ProjectDetailsForVmsDto(
                status = 'Null',
                name = '',
                id = 56,
                cloud_type = 'NONE',
                cloud_name = '',
                cloud_id = 56,
                organization_name = '',
                organization_id = 56,
                is_locked = True,
                is_project_maintenance_mode_enabled = True,
                has_selected_flavors = True,
                is_maintenance_mode_enabled = True,
                is_drs_enabled = True,
                project_cloud_revision = 56,
                cloud_credential_revision = 56,
                allow_full_spot_kubernetes = True,
                allow_spot_workers = True,
                allow_spot_vms = True,
                max_spot_price = 1.337,
                total_hourly_cost = 1.337,
                availability_zones = [
                    ''
                    ],
                hypervisors = [
                    ''
                    ],
                expired_at = ''
            )
        else:
            return ProjectDetailsForVmsDto(
                status = 'Null',
                name = '',
                id = 56,
                cloud_type = 'NONE',
                cloud_name = '',
                cloud_id = 56,
                organization_name = '',
                organization_id = 56,
                is_locked = True,
                is_project_maintenance_mode_enabled = True,
                has_selected_flavors = True,
                is_maintenance_mode_enabled = True,
                is_drs_enabled = True,
                project_cloud_revision = 56,
                cloud_credential_revision = 56,
                allow_full_spot_kubernetes = True,
                allow_spot_workers = True,
                allow_spot_vms = True,
                max_spot_price = 1.337,
                total_hourly_cost = 1.337,
                availability_zones = [
                    ''
                    ],
                hypervisors = [
                    ''
                    ],
                expired_at = '',
        )
        """

    def testProjectDetailsForVmsDto(self):
        """Test ProjectDetailsForVmsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
