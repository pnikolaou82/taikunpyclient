# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.imported_as_read_only_visibility import ImportedAsReadOnlyVisibility

class TestImportedAsReadOnlyVisibility(unittest.TestCase):
    """ImportedAsReadOnlyVisibility unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImportedAsReadOnlyVisibility:
        """Test ImportedAsReadOnlyVisibility
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportedAsReadOnlyVisibility`
        """
        model = ImportedAsReadOnlyVisibility()
        if include_optional:
            return ImportedAsReadOnlyVisibility(
                lock = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, ),
                unlock = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, )
            )
        else:
            return ImportedAsReadOnlyVisibility(
                lock = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, ),
                unlock = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, ),
        )
        """

    def testImportedAsReadOnlyVisibility(self):
        """Test ImportedAsReadOnlyVisibility"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
