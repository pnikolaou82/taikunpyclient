# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.prometheus_rule_list_dto import PrometheusRuleListDto

class TestPrometheusRuleListDto(unittest.TestCase):
    """PrometheusRuleListDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrometheusRuleListDto:
        """Test PrometheusRuleListDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrometheusRuleListDto`
        """
        model = PrometheusRuleListDto()
        if include_optional:
            return PrometheusRuleListDto(
                id = 56,
                name = '',
                password = '',
                user_name = '',
                url = '',
                metric_name = '',
                labels = [
                    taikunpycore.models.prometheus_label_list_dto.PrometheusLabelListDto(
                        label = '', 
                        value = '', )
                    ],
                bound_organizations = [
                    taikunpycore.models.prometheus_organization_discount_dto.PrometheusOrganizationDiscountDto(
                        id = 56, 
                        name = '', 
                        rule_discount_rate = 1.337, 
                        global_discount_rate = 1.337, )
                    ],
                type = 'Count',
                price = 1.337,
                billing_start_date = '',
                created_at = '',
                partner = taikunpycore.models.partner_entity.PartnerEntity(
                    partner_id = 56, 
                    partner_name = '', 
                    logo = '', ),
                operation_credential = taikunpycore.models.operation_credentials_for_organization_entity.OperationCredentialsForOrganizationEntity(
                    operation_credential_id = 56, 
                    name = '', 
                    is_default = True, ),
                created_by = '',
                last_modified = '',
                last_modified_by = ''
            )
        else:
            return PrometheusRuleListDto(
                id = 56,
                name = '',
                password = '',
                user_name = '',
                url = '',
                metric_name = '',
                labels = [
                    taikunpycore.models.prometheus_label_list_dto.PrometheusLabelListDto(
                        label = '', 
                        value = '', )
                    ],
                bound_organizations = [
                    taikunpycore.models.prometheus_organization_discount_dto.PrometheusOrganizationDiscountDto(
                        id = 56, 
                        name = '', 
                        rule_discount_rate = 1.337, 
                        global_discount_rate = 1.337, )
                    ],
                type = 'Count',
                price = 1.337,
                billing_start_date = '',
                created_at = '',
                partner = taikunpycore.models.partner_entity.PartnerEntity(
                    partner_id = 56, 
                    partner_name = '', 
                    logo = '', ),
                operation_credential = taikunpycore.models.operation_credentials_for_organization_entity.OperationCredentialsForOrganizationEntity(
                    operation_credential_id = 56, 
                    name = '', 
                    is_default = True, ),
                created_by = '',
                last_modified = '',
                last_modified_by = '',
        )
        """

    def testPrometheusRuleListDto(self):
        """Test PrometheusRuleListDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
