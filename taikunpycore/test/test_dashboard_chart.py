# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.dashboard_chart import DashboardChart

class TestDashboardChart(unittest.TestCase):
    """DashboardChart unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DashboardChart:
        """Test DashboardChart
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DashboardChart`
        """
        model = DashboardChart()
        if include_optional:
            return DashboardChart(
                organization = taikunpycore.models.organization_entity_for_dashboard.OrganizationEntityForDashboard(
                    id = 56, 
                    name = '', 
                    users = 56, ),
                projects = taikunpycore.models.project_chart_dto.ProjectChartDto(
                    succeeded = [
                        taikunpycore.models.project_common_record_dto.ProjectCommonRecordDto(
                            id = 56, 
                            name = '', 
                            expired_at = '', )
                        ], 
                    updating = [
                        taikunpycore.models.project_common_record_dto.ProjectCommonRecordDto(
                            id = 56, 
                            name = '', 
                            expired_at = '', )
                        ], 
                    total_count = 56, 
                    failed = [
                        
                        ], 
                    purging = [
                        
                        ], 
                    deleting = [
                        
                        ], 
                    importing = [
                        
                        ], 
                    failed_to_import = [
                        
                        ], ),
                cloud_credentials = taikunpycore.models.credential_chart_dto.CredentialChartDto(
                    aws = 56, 
                    azure = 56, 
                    openstack = 56, 
                    google = 56, 
                    tanzu = 56, 
                    proxmox = 56, 
                    openshift = 56, 
                    vsphere = 56, 
                    zadara = 56, 
                    zededa = 56, 
                    generic_k8_s = 56, 
                    total_count = 56, ),
                servers = taikunpycore.models.server_chart_dto.ServerChartDto(
                    aws = [
                        taikunpycore.models.server_common_record_dto.ServerCommonRecordDto(
                            project_id = 56, 
                            project_name = '', 
                            names = [
                                ''
                                ], )
                        ], 
                    azure = [
                        taikunpycore.models.server_common_record_dto.ServerCommonRecordDto(
                            project_id = 56, 
                            project_name = '', )
                        ], 
                    openstack = [
                        
                        ], 
                    google = [
                        
                        ], 
                    tanzu = [
                        
                        ], 
                    proxmox = [
                        
                        ], 
                    vsphere = [
                        
                        ], 
                    zadara = [
                        
                        ], 
                    openshift = [
                        
                        ], 
                    zededa = [
                        
                        ], 
                    generic_k8_s = [
                        
                        ], 
                    failed = [
                        
                        ], 
                    succeeded = [
                        
                        ], 
                    waiting = [
                        
                        ], 
                    updating = [
                        
                        ], 
                    deleting = [
                        
                        ], 
                    purging = [
                        
                        ], 
                    total_count = 56, 
                    total_cpu = 56, 
                    total_ram = 56, 
                    total_disk_size = 56, 
                    total_failed_count = 56, 
                    total_succeeded_count = 56, 
                    total_updating_count = 56, 
                    total_pending_count = 56, 
                    total_aws_count = 56, 
                    total_azure_count = 56, 
                    total_openstack_count = 56, 
                    total_google_count = 56, 
                    total_tanzu_count = 56, 
                    total_openshift_count = 56, 
                    total_proxmox_count = 56, 
                    total_vsphere_count = 56, 
                    total_zadara_count = 56, 
                    total_zededa_count = 56, 
                    total_generic_k8_s_count = 56, 
                    used_resources = [
                        taikunpycore.models.user_resource_chart_dto.UserResourceChartDto(
                            project_name = '', 
                            project_id = 56, 
                            disk_size = 56, 
                            ram = 56, 
                            cpu = 56, 
                            max_ram = 56, 
                            max_cpu = 56, 
                            max_disk_size = 56, )
                        ], ),
                stand_alone_vms = taikunpycore.models.server_chart_dto.ServerChartDto(
                    aws = [
                        taikunpycore.models.server_common_record_dto.ServerCommonRecordDto(
                            project_id = 56, 
                            project_name = '', 
                            names = [
                                ''
                                ], )
                        ], 
                    azure = [
                        taikunpycore.models.server_common_record_dto.ServerCommonRecordDto(
                            project_id = 56, 
                            project_name = '', )
                        ], 
                    openstack = [
                        
                        ], 
                    google = [
                        
                        ], 
                    tanzu = [
                        
                        ], 
                    proxmox = [
                        
                        ], 
                    vsphere = [
                        
                        ], 
                    zadara = [
                        
                        ], 
                    openshift = [
                        
                        ], 
                    zededa = [
                        
                        ], 
                    generic_k8_s = [
                        
                        ], 
                    failed = [
                        
                        ], 
                    succeeded = [
                        
                        ], 
                    waiting = [
                        
                        ], 
                    updating = [
                        
                        ], 
                    deleting = [
                        
                        ], 
                    purging = [
                        
                        ], 
                    total_count = 56, 
                    total_cpu = 56, 
                    total_ram = 56, 
                    total_disk_size = 56, 
                    total_failed_count = 56, 
                    total_succeeded_count = 56, 
                    total_updating_count = 56, 
                    total_pending_count = 56, 
                    total_aws_count = 56, 
                    total_azure_count = 56, 
                    total_openstack_count = 56, 
                    total_google_count = 56, 
                    total_tanzu_count = 56, 
                    total_openshift_count = 56, 
                    total_proxmox_count = 56, 
                    total_vsphere_count = 56, 
                    total_zadara_count = 56, 
                    total_zededa_count = 56, 
                    total_generic_k8_s_count = 56, 
                    used_resources = [
                        taikunpycore.models.user_resource_chart_dto.UserResourceChartDto(
                            project_name = '', 
                            project_id = 56, 
                            disk_size = 56, 
                            ram = 56, 
                            cpu = 56, 
                            max_ram = 56, 
                            max_cpu = 56, 
                            max_disk_size = 56, )
                        ], )
            )
        else:
            return DashboardChart(
        )
        """

    def testDashboardChart(self):
        """Test DashboardChart"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
