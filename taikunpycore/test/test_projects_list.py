# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.projects_list import ProjectsList

class TestProjectsList(unittest.TestCase):
    """ProjectsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectsList:
        """Test ProjectsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectsList`
        """
        model = ProjectsList()
        if include_optional:
            return ProjectsList(
                data = [
                    taikunpycore.models.project_list_detail_dto.ProjectListDetailDto(
                        id = 56, 
                        name = '', 
                        is_kubernetes = True, 
                        is_locked = True, 
                        is_virtual_cluster = True, 
                        is_monitoring_enabled = True, 
                        has_kube_config_file = True, 
                        is_maintenance_mode_enabled = True, 
                        cloud_credential_name = '', 
                        organization_name = '', 
                        organization_id = 56, 
                        status = 'Null', 
                        health = 'Null', 
                        cloud_type = 'NONE', 
                        kubespray_current_version = '', 
                        kubespray_target_version = '', 
                        kubernetes_current_version = '', 
                        kubernetes_target_version = '', 
                        created_at = '', 
                        alerts_count = 56, 
                        total_servers_count = 56, 
                        total_standalone_vms_count = 56, 
                        bound_users = [
                            taikunpycore.models.user_dto.UserDto(
                                user_id = '', 
                                user_name = '', )
                            ], 
                        created_by = '', 
                        last_modified = '', 
                        expired_at = '', 
                        delete_on_expiration = True, 
                        certificate_expired_at = '', 
                        last_modified_by = '', 
                        quota_id = 56, 
                        allow_full_spot_kubernetes = True, 
                        allow_spot_workers = True, 
                        allow_spot_vms = True, 
                        max_spot_price = 1.337, 
                        project_action = True, 
                        has_expiration_warning = True, 
                        total_hourly_cost = 1.337, 
                        is_autoscaling_enabled = True, 
                        is_autoscaling_spot_enabled = True, 
                        ai_enabled = True, 
                        any_server = True, 
                        any_vm = True, 
                        is_backup_enabled = True, 
                        is_project_maintenance_mode_enabled = True, 
                        all_users = [
                            ''
                            ], 
                        parent_project_id = 56, 
                        alerting_profile_id = 56, 
                        opa_profile_id = 56, 
                        lock_button = taikunpycore.models.button_status_dto.ButtonStatusDto(
                            enable = True, 
                            reasons = [
                                ''
                                ], 
                            hidden = True, ), 
                        unlock_button = taikunpycore.models.button_status_dto.ButtonStatusDto(
                            enable = True, 
                            hidden = True, ), 
                        delete_button = , 
                        kube_info_button = , 
                        set_expiration_date_button = , 
                        reset_status_button = , 
                        import_cluster_type = 'None', 
                        e_import_cluster_type = 'CloudCredential', )
                    ],
                total_count = 56
            )
        else:
            return ProjectsList(
                data = [
                    taikunpycore.models.project_list_detail_dto.ProjectListDetailDto(
                        id = 56, 
                        name = '', 
                        is_kubernetes = True, 
                        is_locked = True, 
                        is_virtual_cluster = True, 
                        is_monitoring_enabled = True, 
                        has_kube_config_file = True, 
                        is_maintenance_mode_enabled = True, 
                        cloud_credential_name = '', 
                        organization_name = '', 
                        organization_id = 56, 
                        status = 'Null', 
                        health = 'Null', 
                        cloud_type = 'NONE', 
                        kubespray_current_version = '', 
                        kubespray_target_version = '', 
                        kubernetes_current_version = '', 
                        kubernetes_target_version = '', 
                        created_at = '', 
                        alerts_count = 56, 
                        total_servers_count = 56, 
                        total_standalone_vms_count = 56, 
                        bound_users = [
                            taikunpycore.models.user_dto.UserDto(
                                user_id = '', 
                                user_name = '', )
                            ], 
                        created_by = '', 
                        last_modified = '', 
                        expired_at = '', 
                        delete_on_expiration = True, 
                        certificate_expired_at = '', 
                        last_modified_by = '', 
                        quota_id = 56, 
                        allow_full_spot_kubernetes = True, 
                        allow_spot_workers = True, 
                        allow_spot_vms = True, 
                        max_spot_price = 1.337, 
                        project_action = True, 
                        has_expiration_warning = True, 
                        total_hourly_cost = 1.337, 
                        is_autoscaling_enabled = True, 
                        is_autoscaling_spot_enabled = True, 
                        ai_enabled = True, 
                        any_server = True, 
                        any_vm = True, 
                        is_backup_enabled = True, 
                        is_project_maintenance_mode_enabled = True, 
                        all_users = [
                            ''
                            ], 
                        parent_project_id = 56, 
                        alerting_profile_id = 56, 
                        opa_profile_id = 56, 
                        lock_button = taikunpycore.models.button_status_dto.ButtonStatusDto(
                            enable = True, 
                            reasons = [
                                ''
                                ], 
                            hidden = True, ), 
                        unlock_button = taikunpycore.models.button_status_dto.ButtonStatusDto(
                            enable = True, 
                            hidden = True, ), 
                        delete_button = , 
                        kube_info_button = , 
                        set_expiration_date_button = , 
                        reset_status_button = , 
                        import_cluster_type = 'None', 
                        e_import_cluster_type = 'CloudCredential', )
                    ],
                total_count = 56,
        )
        """

    def testProjectsList(self):
        """Test ProjectsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
