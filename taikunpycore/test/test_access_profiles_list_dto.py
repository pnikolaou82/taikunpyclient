# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.access_profiles_list_dto import AccessProfilesListDto

class TestAccessProfilesListDto(unittest.TestCase):
    """AccessProfilesListDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccessProfilesListDto:
        """Test AccessProfilesListDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccessProfilesListDto`
        """
        model = AccessProfilesListDto()
        if include_optional:
            return AccessProfilesListDto(
                id = 56,
                name = '',
                http_proxy = '',
                organization_id = 56,
                organization_name = '',
                is_locked = True,
                dns_servers = [
                    taikunpycore.models.dns_server_list_dto.DnsServerListDto(
                        id = 56, 
                        address = '', )
                    ],
                ntp_servers = [
                    taikunpycore.models.ntp_server_list_dto.NtpServerListDto(
                        id = 56, 
                        address = '', )
                    ],
                allowed_hosts = [
                    taikunpycore.models.allowed_host_list_dto.AllowedHostListDto(
                        id = 56, 
                        description = '', 
                        ip_address = '', 
                        mask_bits = 56, 
                        access_profile_id = 56, 
                        access_profile_name = '', )
                    ],
                projects = [
                    taikunpycore.models.common_dropdown_dto.CommonDropdownDto(
                        id = 56, 
                        name = '', )
                    ],
                created_by = '',
                last_modified = '',
                last_modified_by = '',
                created_at = ''
            )
        else:
            return AccessProfilesListDto(
                id = 56,
                name = '',
                http_proxy = '',
                organization_id = 56,
                organization_name = '',
                is_locked = True,
                dns_servers = [
                    taikunpycore.models.dns_server_list_dto.DnsServerListDto(
                        id = 56, 
                        address = '', )
                    ],
                ntp_servers = [
                    taikunpycore.models.ntp_server_list_dto.NtpServerListDto(
                        id = 56, 
                        address = '', )
                    ],
                allowed_hosts = [
                    taikunpycore.models.allowed_host_list_dto.AllowedHostListDto(
                        id = 56, 
                        description = '', 
                        ip_address = '', 
                        mask_bits = 56, 
                        access_profile_id = 56, 
                        access_profile_name = '', )
                    ],
                projects = [
                    taikunpycore.models.common_dropdown_dto.CommonDropdownDto(
                        id = 56, 
                        name = '', )
                    ],
                created_by = '',
                last_modified = '',
                last_modified_by = '',
                created_at = '',
        )
        """

    def testAccessProfilesListDto(self):
        """Test AccessProfilesListDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
