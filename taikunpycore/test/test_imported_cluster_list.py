# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.imported_cluster_list import ImportedClusterList

class TestImportedClusterList(unittest.TestCase):
    """ImportedClusterList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImportedClusterList:
        """Test ImportedClusterList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportedClusterList`
        """
        model = ImportedClusterList()
        if include_optional:
            return ImportedClusterList(
                data = [
                    taikunpycore.models.imported_cluster_list_dto.ImportedClusterListDto(
                        id = 56, 
                        name = '', 
                        is_virtual_cluster = True, 
                        is_locked = True, 
                        has_kube_config_file = True, 
                        is_maintenance_mode_enabled = True, 
                        organization_name = '', 
                        organization_id = 56, 
                        kubernetes_version = '', 
                        created_at = '', 
                        created_by = '', 
                        last_modified = '', 
                        last_modified_by = '', 
                        alerts_count = 56, 
                        expired_at = '', 
                        delete_on_expiration = True, 
                        wasm_enabled = True, 
                        alerting_profile_id = 56, 
                        alerting_profile_name = '', 
                        access_ip = '', 
                        cloud_type = 'NONE', 
                        status = 'Null', 
                        health = 'Null', )
                    ],
                project = taikunpycore.models.imported_cluster_details_dto.ImportedClusterDetailsDto(
                    id = 56, 
                    name = '', 
                    is_locked = True, 
                    access_ip = '', 
                    kubernetes_version = '', 
                    import_cluster_type = 'None', 
                    organization_id = 56, 
                    organization_name = '', 
                    cloud_credential_name = '', 
                    cloud_credential_id = 56, 
                    health = 'Null', 
                    cloud_type = 'NONE', 
                    status = 'Null', 
                    is_monitoring_enabled = True, 
                    alerting_profile_id = 56, 
                    alerting_profile_name = '', 
                    is_opa_enabled = True, 
                    opa_profile_id = 56, 
                    is_backup_enabled = True, 
                    s3_credential_id = 56, 
                    ai_enabled = True, 
                    ai_credential_id = 56, 
                    expired_at = '', 
                    alerts_count = 56, )
            )
        else:
            return ImportedClusterList(
                data = [
                    taikunpycore.models.imported_cluster_list_dto.ImportedClusterListDto(
                        id = 56, 
                        name = '', 
                        is_virtual_cluster = True, 
                        is_locked = True, 
                        has_kube_config_file = True, 
                        is_maintenance_mode_enabled = True, 
                        organization_name = '', 
                        organization_id = 56, 
                        kubernetes_version = '', 
                        created_at = '', 
                        created_by = '', 
                        last_modified = '', 
                        last_modified_by = '', 
                        alerts_count = 56, 
                        expired_at = '', 
                        delete_on_expiration = True, 
                        wasm_enabled = True, 
                        alerting_profile_id = 56, 
                        alerting_profile_name = '', 
                        access_ip = '', 
                        cloud_type = 'NONE', 
                        status = 'Null', 
                        health = 'Null', )
                    ],
                project = taikunpycore.models.imported_cluster_details_dto.ImportedClusterDetailsDto(
                    id = 56, 
                    name = '', 
                    is_locked = True, 
                    access_ip = '', 
                    kubernetes_version = '', 
                    import_cluster_type = 'None', 
                    organization_id = 56, 
                    organization_name = '', 
                    cloud_credential_name = '', 
                    cloud_credential_id = 56, 
                    health = 'Null', 
                    cloud_type = 'NONE', 
                    status = 'Null', 
                    is_monitoring_enabled = True, 
                    alerting_profile_id = 56, 
                    alerting_profile_name = '', 
                    is_opa_enabled = True, 
                    opa_profile_id = 56, 
                    is_backup_enabled = True, 
                    s3_credential_id = 56, 
                    ai_enabled = True, 
                    ai_credential_id = 56, 
                    expired_at = '', 
                    alerts_count = 56, ),
        )
        """

    def testImportedClusterList(self):
        """Test ImportedClusterList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
