# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.helm_release_dto import HelmReleaseDto

class TestHelmReleaseDto(unittest.TestCase):
    """HelmReleaseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HelmReleaseDto:
        """Test HelmReleaseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HelmReleaseDto`
        """
        model = HelmReleaseDto()
        if include_optional:
            return HelmReleaseDto(
                api_version = '',
                kind = '',
                metadata = taikunpycore.models.helm_release_meta_data.HelmReleaseMetaData(
                    creation_timestamp = '', 
                    name = '', 
                    namespace = '', ),
                spec = taikunpycore.models.helm_release_spec.HelmReleaseSpec(
                    target_namespace = '', 
                    chart = taikunpycore.models.helm_release_chart.HelmReleaseChart(
                        spec = taikunpycore.models.helm_release_chart_spec.HelmReleaseChartSpec(
                            version = '', 
                            source_ref = taikunpycore.models.helm_release_source_ref.HelmReleaseSourceRef(
                                kind = '', 
                                name = '', ), ), ), ),
                status = taikunpycore.models.helm_status.HelmStatus(
                    conditions = [
                        taikunpycore.models.helm_condition.HelmCondition(
                            message = '', 
                            reason = '', 
                            status = '', 
                            type = '', )
                        ], 
                    failures = 56, )
            )
        else:
            return HelmReleaseDto(
        )
        """

    def testHelmReleaseDto(self):
        """Test HelmReleaseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
