# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.create_alerting_profile_command import CreateAlertingProfileCommand

class TestCreateAlertingProfileCommand(unittest.TestCase):
    """CreateAlertingProfileCommand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAlertingProfileCommand:
        """Test CreateAlertingProfileCommand
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAlertingProfileCommand`
        """
        model = CreateAlertingProfileCommand()
        if include_optional:
            return CreateAlertingProfileCommand(
                name = '',
                slack_configuration_id = 56,
                organization_id = 56,
                emails = [
                    taikunpycore.models.alerting_email_dto.AlertingEmailDto(
                        email = '', )
                    ],
                webhooks = [
                    taikunpycore.models.alerting_webhook_dto.AlertingWebhookDto(
                        id = 56, 
                        url = '', 
                        headers = [
                            taikunpycore.models.webhook_header_dto.WebhookHeaderDto(
                                id = 56, 
                                key = '', 
                                value = '', )
                            ], )
                    ],
                alerting_integrations = [
                    taikunpycore.models.alerting_integration_dto.AlertingIntegrationDto(
                        url = '', 
                        token = '', 
                        alerting_integration_type = 'Opsgenie', )
                    ],
                reminder = 'HalfHour'
            )
        else:
            return CreateAlertingProfileCommand(
        )
        """

    def testCreateAlertingProfileCommand(self):
        """Test CreateAlertingProfileCommand"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
