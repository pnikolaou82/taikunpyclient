# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.kubernetes_dashboard_dto import KubernetesDashboardDto

class TestKubernetesDashboardDto(unittest.TestCase):
    """KubernetesDashboardDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KubernetesDashboardDto:
        """Test KubernetesDashboardDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KubernetesDashboardDto`
        """
        model = KubernetesDashboardDto()
        if include_optional:
            return KubernetesDashboardDto(
                pods = [
                    taikunpycore.models.pod_dto.PodDto(
                        metadata_name = '', 
                        status = '', 
                        restart_count = 56, 
                        namespace = '', 
                        age = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        node = '', 
                        phase = '', )
                    ],
                nodes = [
                    taikunpycore.models.node_dto.NodeDto(
                        metadata_name = null, 
                        kubelet_ready = null, 
                        kubelet_sufficient = null, 
                        kubelet_disk_pressure = null, 
                        kubelet_memory = null, )
                    ]
            )
        else:
            return KubernetesDashboardDto(
                pods = [
                    taikunpycore.models.pod_dto.PodDto(
                        metadata_name = '', 
                        status = '', 
                        restart_count = 56, 
                        namespace = '', 
                        age = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        node = '', 
                        phase = '', )
                    ],
                nodes = [
                    taikunpycore.models.node_dto.NodeDto(
                        metadata_name = null, 
                        kubelet_ready = null, 
                        kubelet_sufficient = null, 
                        kubelet_disk_pressure = null, 
                        kubelet_memory = null, )
                    ],
        )
        """

    def testKubernetesDashboardDto(self):
        """Test KubernetesDashboardDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
