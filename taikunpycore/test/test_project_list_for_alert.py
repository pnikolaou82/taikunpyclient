# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.project_list_for_alert import ProjectListForAlert

class TestProjectListForAlert(unittest.TestCase):
    """ProjectListForAlert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectListForAlert:
        """Test ProjectListForAlert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectListForAlert`
        """
        model = ProjectListForAlert()
        if include_optional:
            return ProjectListForAlert(
                id = 56,
                name = '',
                token = '',
                status = '',
                organization_id = 56,
                health = '',
                is_kubernetes = True,
                is_locked = True,
                is_monitoring_enabled = True,
                has_kube_config_file = True,
                monitoring_credential = taikunpycore.models.monitoring_credentials_list_dto.MonitoringCredentialsListDto(
                    username = '', 
                    password = '', 
                    prometheus_url = '', 
                    loki_url = '', 
                    alert_manager_url = '', ),
                kubernetes_alerts = [
                    taikunpycore.models.kubernetes_alert_dto_for_poller.KubernetesAlertDtoForPoller(
                        id = 56, 
                        labels = null, 
                        description = '', 
                        title = '', 
                        severity = '', 
                        fingerprint = '', 
                        status = '', 
                        starts_at = '', 
                        end_at = '', 
                        is_solved = True, 
                        project_id = 56, 
                        project_name = '', 
                        is_silenced = True, 
                        silence_reason = '', 
                        last_modified_by = '', )
                    ],
                kubernetes_current_version = '',
                total_servers_count = 56
            )
        else:
            return ProjectListForAlert(
                id = 56,
                name = '',
                token = '',
                status = '',
                organization_id = 56,
                health = '',
                is_kubernetes = True,
                is_locked = True,
                is_monitoring_enabled = True,
                has_kube_config_file = True,
                monitoring_credential = taikunpycore.models.monitoring_credentials_list_dto.MonitoringCredentialsListDto(
                    username = '', 
                    password = '', 
                    prometheus_url = '', 
                    loki_url = '', 
                    alert_manager_url = '', ),
                kubernetes_alerts = [
                    taikunpycore.models.kubernetes_alert_dto_for_poller.KubernetesAlertDtoForPoller(
                        id = 56, 
                        labels = null, 
                        description = '', 
                        title = '', 
                        severity = '', 
                        fingerprint = '', 
                        status = '', 
                        starts_at = '', 
                        end_at = '', 
                        is_solved = True, 
                        project_id = 56, 
                        project_name = '', 
                        is_silenced = True, 
                        silence_reason = '', 
                        last_modified_by = '', )
                    ],
                kubernetes_current_version = '',
                total_servers_count = 56,
        )
        """

    def testProjectListForAlert(self):
        """Test ProjectListForAlert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
