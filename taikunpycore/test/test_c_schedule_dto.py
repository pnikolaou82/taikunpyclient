# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.c_schedule_dto import CScheduleDto

class TestCScheduleDto(unittest.TestCase):
    """CScheduleDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CScheduleDto:
        """Test CScheduleDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CScheduleDto`
        """
        model = CScheduleDto()
        if include_optional:
            return CScheduleDto(
                status = taikunpycore.models.status.Status(
                    last_backup = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    phase = '', ),
                metadata_name = '',
                namespace = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                schedule = '',
                ttl = '',
                last_backup = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                phase = '',
                excluded_namespaces = [
                    ''
                    ],
                included_namespaces = [
                    ''
                    ]
            )
        else:
            return CScheduleDto(
                metadata_name = '',
                namespace = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                schedule = '',
                ttl = '',
                last_backup = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                phase = '',
                excluded_namespaces = [
                    ''
                    ],
                included_namespaces = [
                    ''
                    ],
        )
        """

    def testCScheduleDto(self):
        """Test CScheduleDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
