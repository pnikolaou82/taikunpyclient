# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.helm_releases_list import HelmReleasesList

class TestHelmReleasesList(unittest.TestCase):
    """HelmReleasesList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HelmReleasesList:
        """Test HelmReleasesList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HelmReleasesList`
        """
        model = HelmReleasesList()
        if include_optional:
            return HelmReleasesList(
                data = [
                    taikunpycore.models.helm_release_dto.HelmReleaseDto(
                        api_version = '', 
                        kind = '', 
                        metadata = taikunpycore.models.helm_release_meta_data.HelmReleaseMetaData(
                            creation_timestamp = '', 
                            name = '', 
                            namespace = '', ), 
                        spec = taikunpycore.models.helm_release_spec.HelmReleaseSpec(
                            target_namespace = '', 
                            chart = taikunpycore.models.helm_release_chart.HelmReleaseChart(), ), 
                        status = taikunpycore.models.helm_status.HelmStatus(
                            conditions = [
                                taikunpycore.models.helm_condition.HelmCondition(
                                    message = '', 
                                    reason = '', 
                                    type = '', )
                                ], 
                            failures = 56, ), )
                    ],
                total_count = 56
            )
        else:
            return HelmReleasesList(
                data = [
                    taikunpycore.models.helm_release_dto.HelmReleaseDto(
                        api_version = '', 
                        kind = '', 
                        metadata = taikunpycore.models.helm_release_meta_data.HelmReleaseMetaData(
                            creation_timestamp = '', 
                            name = '', 
                            namespace = '', ), 
                        spec = taikunpycore.models.helm_release_spec.HelmReleaseSpec(
                            target_namespace = '', 
                            chart = taikunpycore.models.helm_release_chart.HelmReleaseChart(), ), 
                        status = taikunpycore.models.helm_status.HelmStatus(
                            conditions = [
                                taikunpycore.models.helm_condition.HelmCondition(
                                    message = '', 
                                    reason = '', 
                                    type = '', )
                                ], 
                            failures = 56, ), )
                    ],
                total_count = 56,
        )
        """

    def testHelmReleasesList(self):
        """Test HelmReleasesList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
