# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_projects_add_project_users(self) -> None:
        """Test case for projects_add_project_users

        Add users to project
        """
        pass

    def test_projects_ai_analyzer(self) -> None:
        """Test case for projects_ai_analyzer

        Analyze cluster by AI model
        """
        pass

    def test_projects_alerts(self) -> None:
        """Test case for projects_alerts

        Project alerts
        """
        pass

    def test_projects_can_add_vcluster(self) -> None:
        """Test case for projects_can_add_vcluster

        Visibility of adding vcluster
        """
        pass

    def test_projects_chat_completions(self) -> None:
        """Test case for projects_chat_completions

        AI Chat completions
        """
        pass

    def test_projects_create(self) -> None:
        """Test case for projects_create

        Create a new project
        """
        pass

    def test_projects_delete(self) -> None:
        """Test case for projects_delete

        Delete the project. The project must be empty (no server) and in READY state
        """
        pass

    def test_projects_delete_project_users(self) -> None:
        """Test case for projects_delete_project_users

        Delete users from project
        """
        pass

    def test_projects_describe(self) -> None:
        """Test case for projects_describe

        Describe project by Id
        """
        pass

    def test_projects_dropdown(self) -> None:
        """Test case for projects_dropdown

        Retrieve list of projects for dropdown
        """
        pass

    def test_projects_edit_health(self) -> None:
        """Test case for projects_edit_health

        Update health status of the project by Id
        """
        pass

    def test_projects_edit_status(self) -> None:
        """Test case for projects_edit_status

        Change the project status for the given project. Only available for admin.
        """
        pass

    def test_projects_extend_lifetime(self) -> None:
        """Test case for projects_extend_lifetime

        Extend life time of project
        """
        pass

    def test_projects_for_alerting(self) -> None:
        """Test case for projects_for_alerting

        Retrieve a list of projects for alert poller. Only available for admins.
        """
        pass

    def test_projects_for_billing(self) -> None:
        """Test case for projects_for_billing

        Retrieve a list of projects for billing
        """
        pass

    def test_projects_imported_cluster_details(self) -> None:
        """Test case for projects_imported_cluster_details

        Imported cluster details
        """
        pass

    def test_projects_list(self) -> None:
        """Test case for projects_list

        Retrieve all projects
        """
        pass

    def test_projects_lock_manager(self) -> None:
        """Test case for projects_lock_manager

        Lock/Unlock project
        """
        pass

    def test_projects_loki_logs(self) -> None:
        """Test case for projects_loki_logs

        Retrieve loki logs
        """
        pass

    def test_projects_maintenance_manager(self) -> None:
        """Test case for projects_maintenance_manager

        Enable/disable project's maintenance mode
        """
        pass

    def test_projects_monitoring_alerts(self) -> None:
        """Test case for projects_monitoring_alerts

        Monitoring alerts for project
        """
        pass

    def test_projects_prometheus_metrics(self) -> None:
        """Test case for projects_prometheus_metrics

        Prometheus metrics data project
        """
        pass

    def test_projects_prometheus_metrics_autocomplete(self) -> None:
        """Test case for projects_prometheus_metrics_autocomplete

        Prometheus metrics autocomplete values
        """
        pass

    def test_projects_toggle_full_spot(self) -> None:
        """Test case for projects_toggle_full_spot

        Full spot operations enable/disable
        """
        pass

    def test_projects_toggle_spot_vms(self) -> None:
        """Test case for projects_toggle_spot_vms

        Spot vm(s) operations enable/disable
        """
        pass

    def test_projects_toggle_spot_workers(self) -> None:
        """Test case for projects_toggle_spot_workers

        Spot worker(s) operations enable/disable
        """
        pass

    def test_projects_visibility(self) -> None:
        """Test case for projects_visibility

        Visibility of project actions
        """
        pass


if __name__ == '__main__':
    unittest.main()
