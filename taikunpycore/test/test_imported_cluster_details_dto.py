# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.imported_cluster_details_dto import ImportedClusterDetailsDto

class TestImportedClusterDetailsDto(unittest.TestCase):
    """ImportedClusterDetailsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImportedClusterDetailsDto:
        """Test ImportedClusterDetailsDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportedClusterDetailsDto`
        """
        model = ImportedClusterDetailsDto()
        if include_optional:
            return ImportedClusterDetailsDto(
                id = 56,
                name = '',
                is_locked = True,
                access_ip = '',
                kubernetes_version = '',
                import_cluster_type = 'None',
                organization_id = 56,
                organization_name = '',
                cloud_credential_name = '',
                cloud_credential_id = 56,
                health = 'Null',
                cloud_type = 'NONE',
                status = 'Null',
                is_monitoring_enabled = True,
                alerting_profile_id = 56,
                alerting_profile_name = '',
                is_opa_enabled = True,
                opa_profile_id = 56,
                is_backup_enabled = True,
                s3_credential_id = 56,
                ai_enabled = True,
                ai_credential_id = 56,
                expired_at = '',
                alerts_count = 56
            )
        else:
            return ImportedClusterDetailsDto(
                id = 56,
                name = '',
                is_locked = True,
                access_ip = '',
                kubernetes_version = '',
                import_cluster_type = 'None',
                organization_id = 56,
                organization_name = '',
                health = 'Null',
                status = 'Null',
                is_monitoring_enabled = True,
                alerting_profile_id = 56,
                alerting_profile_name = '',
                is_opa_enabled = True,
                opa_profile_id = 56,
                is_backup_enabled = True,
                s3_credential_id = 56,
                ai_enabled = True,
                ai_credential_id = 56,
                expired_at = '',
                alerts_count = 56,
        )
        """

    def testImportedClusterDetailsDto(self):
        """Test ImportedClusterDetailsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
