# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.loki_response_dto import LokiResponseDto

class TestLokiResponseDto(unittest.TestCase):
    """LokiResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LokiResponseDto:
        """Test LokiResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LokiResponseDto`
        """
        model = LokiResponseDto()
        if include_optional:
            return LokiResponseDto(
                project_id = 56,
                parameters = [
                    taikunpycore.models.parameter.Parameter(
                        label = '', 
                        operator = '', 
                        value = '', )
                    ],
                filters = [
                    taikunpycore.models.filter.Filter(
                        operator = '', 
                        value = '', )
                    ],
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                limit = 56,
                direction = '',
                can_download = True
            )
        else:
            return LokiResponseDto(
        )
        """

    def testLokiResponseDto(self):
        """Test LokiResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
