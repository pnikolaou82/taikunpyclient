# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.projects_for_billing_dto import ProjectsForBillingDto

class TestProjectsForBillingDto(unittest.TestCase):
    """ProjectsForBillingDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectsForBillingDto:
        """Test ProjectsForBillingDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectsForBillingDto`
        """
        model = ProjectsForBillingDto()
        if include_optional:
            return ProjectsForBillingDto(
                id = 56,
                name = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                billing_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                organization_name = '',
                price = 1.337,
                servers = [
                    taikunpycore.models.servers_for_billing_dto.ServersForBillingDto(
                        cpu = 56, 
                        ram = 56, )
                    ],
                standalone_vms = [
                    taikunpycore.models.standalone_vms_for_billing_dto.StandaloneVmsForBillingDto(
                        cpu = 56, 
                        ram = 56, )
                    ],
                billing_enabled = True
            )
        else:
            return ProjectsForBillingDto(
                id = 56,
                name = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                billing_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                organization_name = '',
                price = 1.337,
                servers = [
                    taikunpycore.models.servers_for_billing_dto.ServersForBillingDto(
                        cpu = 56, 
                        ram = 56, )
                    ],
                standalone_vms = [
                    taikunpycore.models.standalone_vms_for_billing_dto.StandaloneVmsForBillingDto(
                        cpu = 56, 
                        ram = 56, )
                    ],
                billing_enabled = True,
        )
        """

    def testProjectsForBillingDto(self):
        """Test ProjectsForBillingDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
