# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.catalog_list import CatalogList

class TestCatalogList(unittest.TestCase):
    """CatalogList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CatalogList:
        """Test CatalogList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CatalogList`
        """
        model = CatalogList()
        if include_optional:
            return CatalogList(
                data = [
                    taikunpycore.models.catalog_list_dto.CatalogListDto(
                        id = 56, 
                        name = '', 
                        description = '', 
                        is_locked = True, 
                        is_default = True, 
                        organization_id = 56, 
                        package_ids = [
                            ''
                            ], 
                        bound_projects = [
                            taikunpycore.models.project_catalog_dto.ProjectCatalogDto(
                                id = 56, 
                                name = '', 
                                kubernetes_version = '', 
                                is_locked = True, 
                                maintenance_mode_enabled = True, 
                                is_virtual_cluster = True, 
                                cloud_type = 'NONE', 
                                status = 'Null', 
                                health = 'Null', )
                            ], 
                        bound_applications = [
                            taikunpycore.models.available_packages_dto.AvailablePackagesDto(
                                package_id = '', 
                                catalog_id = 56, 
                                catalog_app_id = 56, 
                                installed_instance_count = 56, 
                                name = '', 
                                normalized_name = '', 
                                logo_image_id = '', 
                                stars = 56, 
                                description = '', 
                                version = '', 
                                app_version = '', 
                                deprecated = True, 
                                signed = True, 
                                is_locked = True, 
                                security_report_summary = taikunpycore.models.security_report_summary.SecurityReportSummary(
                                    low = 56, 
                                    high = 56, 
                                    medium = 56, 
                                    unknown = 56, 
                                    critical = 56, ), 
                                ts = '', 
                                repository = taikunpycore.models.repository.Repository(
                                    url = '', 
                                    kind = 56, 
                                    name = '', 
                                    official = True, 
                                    repository_id = '', 
                                    scanner_disabled = True, 
                                    is_imported = True, 
                                    organization_name = '', 
                                    verified_publisher = True, 
                                    organization_display_name = '', ), 
                                is_added = True, )
                            ], )
                    ],
                total_count = 56
            )
        else:
            return CatalogList(
        )
        """

    def testCatalogList(self):
        """Test CatalogList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
