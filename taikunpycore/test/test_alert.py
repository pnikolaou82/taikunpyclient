# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.alert import Alert

class TestAlert(unittest.TestCase):
    """Alert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Alert:
        """Test Alert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Alert`
        """
        model = Alert()
        if include_optional:
            return Alert(
                labels = taikunpycore.models.alert_labels.AlertLabels(
                    alertname = '', 
                    condition = '', 
                    container = '', 
                    endpoint = '', 
                    instance = '', 
                    job = '', 
                    namespace = '', 
                    node = '', 
                    pod = '', 
                    service = '', 
                    severity = '', 
                    status = '', 
                    daemonset = '', ),
                annotations = taikunpycore.models.annotations.Annotations(
                    description = '', 
                    title = '', ),
                state = '',
                active_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                value = ''
            )
        else:
            return Alert(
        )
        """

    def testAlert(self):
        """Test Alert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
