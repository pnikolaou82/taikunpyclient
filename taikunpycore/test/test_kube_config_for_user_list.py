# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.kube_config_for_user_list import KubeConfigForUserList

class TestKubeConfigForUserList(unittest.TestCase):
    """KubeConfigForUserList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KubeConfigForUserList:
        """Test KubeConfigForUserList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KubeConfigForUserList`
        """
        model = KubeConfigForUserList()
        if include_optional:
            return KubeConfigForUserList(
                data = [
                    taikunpycore.models.kube_config_for_user_dto.KubeConfigForUserDto(
                        id = 56, 
                        user_id = '', 
                        display_name = '', 
                        project_id = 56, 
                        organization_id = 56, 
                        partner_id = 56, 
                        project_name = '', 
                        is_accessible_for_all = True, 
                        is_accessible_for_manager = True, 
                        kube_config_role_name = '', 
                        created_by = '', 
                        created_at = '', 
                        namespace = '', 
                        expiration_date = '', 
                        can_download = True, 
                        can_access_terminal = True, 
                        can_delete = True, )
                    ],
                total_count = 56,
                can_add = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, )
            )
        else:
            return KubeConfigForUserList(
                data = [
                    taikunpycore.models.kube_config_for_user_dto.KubeConfigForUserDto(
                        id = 56, 
                        user_id = '', 
                        display_name = '', 
                        project_id = 56, 
                        organization_id = 56, 
                        partner_id = 56, 
                        project_name = '', 
                        is_accessible_for_all = True, 
                        is_accessible_for_manager = True, 
                        kube_config_role_name = '', 
                        created_by = '', 
                        created_at = '', 
                        namespace = '', 
                        expiration_date = '', 
                        can_download = True, 
                        can_access_terminal = True, 
                        can_delete = True, )
                    ],
                total_count = 56,
                can_add = taikunpycore.models.button_status_dto.ButtonStatusDto(
                    enable = True, 
                    reasons = [
                        ''
                        ], 
                    hidden = True, ),
        )
        """

    def testKubeConfigForUserList(self):
        """Test KubeConfigForUserList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
