# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.create_project_command import CreateProjectCommand

class TestCreateProjectCommand(unittest.TestCase):
    """CreateProjectCommand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateProjectCommand:
        """Test CreateProjectCommand
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateProjectCommand`
        """
        model = CreateProjectCommand()
        if include_optional:
            return CreateProjectCommand(
                name = '',
                kubernetes_version = '',
                organization_id = 56,
                cloud_credential_id = 56,
                s3_credential_id = 56,
                access_profile_id = 56,
                opa_profile_id = 56,
                kubernetes_profile_id = 56,
                is_kubernetes = True,
                is_auto_upgrade = True,
                is_backup_enabled = True,
                is_monitoring_enabled = True,
                ai_enabled = True,
                ai_credential_id = 56,
                flavors = [
                    ''
                    ],
                users = [
                    ''
                    ],
                alerting_profile_id = 56,
                taikun_lb_flavor = '',
                router_id_start_range = 56,
                router_id_end_range = 56,
                expired_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                delete_on_expiration = True,
                allow_full_spot_kubernetes = True,
                allow_spot_workers = True,
                allow_spot_vms = True,
                max_spot_price = 1.337,
                autoscaling_enabled = True,
                autoscaling_group_name = '',
                min_size = 56,
                max_size = 56,
                disk_size = 1.337,
                autoscaling_flavor = '',
                autoscaling_spot_enabled = True,
                cidr = '',
                net_mask = 56,
                save_as_template = True,
                template_name = '',
                server_templates = [
                    taikunpycore.models.server_template_dto.ServerTemplateDto(
                        role = 'Bastion', 
                        flavor = '', 
                        disk_size = 1.337, 
                        count = 56, )
                    ]
            )
        else:
            return CreateProjectCommand(
        )
        """

    def testCreateProjectCommand(self):
        """Test CreateProjectCommand"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
