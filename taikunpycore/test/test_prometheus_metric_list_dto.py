# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.prometheus_metric_list_dto import PrometheusMetricListDto

class TestPrometheusMetricListDto(unittest.TestCase):
    """PrometheusMetricListDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrometheusMetricListDto:
        """Test PrometheusMetricListDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrometheusMetricListDto`
        """
        model = PrometheusMetricListDto()
        if include_optional:
            return PrometheusMetricListDto(
                status = '',
                data = taikunpycore.models.metric_data.MetricData(
                    result_type = '', 
                    result = [
                        taikunpycore.models.metric_result.MetricResult(
                            metric = {
                                'key' : ''
                                }, 
                            value = null, 
                            values = [
                                [
                                    1.337
                                    ]
                                ], )
                        ], )
            )
        else:
            return PrometheusMetricListDto(
        )
        """

    def testPrometheusMetricListDto(self):
        """Test PrometheusMetricListDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
