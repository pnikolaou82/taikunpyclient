# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.create_access_profile_command import CreateAccessProfileCommand

class TestCreateAccessProfileCommand(unittest.TestCase):
    """CreateAccessProfileCommand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAccessProfileCommand:
        """Test CreateAccessProfileCommand
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAccessProfileCommand`
        """
        model = CreateAccessProfileCommand()
        if include_optional:
            return CreateAccessProfileCommand(
                name = '',
                http_proxy = '',
                organization_id = 56,
                ssh_users = [
                    taikunpycore.models.ssh_user_create_dto.SshUserCreateDto(
                        name = '', 
                        ssh_public_key = '', )
                    ],
                dns_servers = [
                    taikunpycore.models.dns_server_create_dto.DnsServerCreateDto(
                        address = '', )
                    ],
                ntp_servers = [
                    taikunpycore.models.ntp_server_create_dto.NtpServerCreateDto(
                        address = '', )
                    ],
                allowed_hosts = [
                    taikunpycore.models.allowed_host_create_dto.AllowedHostCreateDto(
                        description = '', 
                        ip_address = '', 
                        mask_bits = 56, )
                    ]
            )
        else:
            return CreateAccessProfileCommand(
        )
        """

    def testCreateAccessProfileCommand(self):
        """Test CreateAccessProfileCommand"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
