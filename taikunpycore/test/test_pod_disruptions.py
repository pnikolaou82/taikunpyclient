# coding: utf-8

"""
    Taikun - WebApi

    This Api will be responsible for overall data distribution and authorization.

    The version of the OpenAPI document: v1
    Contact: noreply@taikun.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from taikunpycore.models.pod_disruptions import PodDisruptions

class TestPodDisruptions(unittest.TestCase):
    """PodDisruptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PodDisruptions:
        """Test PodDisruptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PodDisruptions`
        """
        model = PodDisruptions()
        if include_optional:
            return PodDisruptions(
                data = [
                    taikunpycore.models.pod_disruption_dto.PodDisruptionDto(
                        name = '', 
                        namespace = '', 
                        min_available = null, 
                        max_available = null, 
                        allowed_disruptions = null, 
                        created_at = '', )
                    ],
                total_count = 56
            )
        else:
            return PodDisruptions(
                data = [
                    taikunpycore.models.pod_disruption_dto.PodDisruptionDto(
                        name = '', 
                        namespace = '', 
                        min_available = null, 
                        max_available = null, 
                        allowed_disruptions = null, 
                        created_at = '', )
                    ],
                total_count = 56,
        )
        """

    def testPodDisruptions(self):
        """Test PodDisruptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
